DECLARE PARAMETER CYCT. SAS OFF.
SET APS TO T. UNTIL APOFF OR ((T-APS)>CYCT) OR (ALTITUDE>ATMOLIMIT) {
IF ALTITUDE<(ATMOLIMIT*0.9) {SET TERMV TO SHIP:TERMVELOCITY.}
IF ALT:RADAR < 5000 {LOCK ALTMODE TO ALT:RADAR.
IF (ALTMODE<1000) AND (VSMODE<0) AND (WARP>0) {SET WARP TO 0.}
IF ALTMODE<750 {IF VSMODE < -10 {CHUTES ON.}
IF ALTMODE < 500 {IF VSMODE <-0.001 {GEAR ON.} ELSE IF VSMODE>3 {GEAR OFF.}}
} ELSE {GEAR OFF.}}
SET CPUMAXDEFL TO SHIPMAXDEFL.
SET CPUMINSPD TO 0. SET CPUMAXSPD TO 9001.
SET CPUMINPITCH TO MAX(-90, -1*ALT:RADAR).
//SET CPUMAXPITCH TO MIN(90, MIN(SHIPMAXPITCH, ALTMODE*2)).
SET CPUMAXPITCH TO 90.
SET CPUMINVS TO -5 *((ALT:RADAR+1)/10).
SET CPUMAXVS TO SPDMODE.
IF PLANALT=OFF {SET CPUALT TO ALTMODE.} ELSE {SET CPUALT TO PLANALT.}
SET ERRALT TO MAX(-1, MIN(1, (CPUALT-ALTMODE)/(ABS(CPUALT)+1000))).
IF PLANVS=OFF {IF PLANALT=OFF {
SET CPUVS TO MAX(CPUMINVS, MIN(CPUMAXVS, VSMODE)).} ELSE {
SET CPUVS TO MAX(CPUMINVS, MIN(CPUMAXVS, ERRALT * (ABS(CPUMAXVS*ERRALT)))).}
} ELSE {SET CPUVS TO MAX(CPUMINVS, MIN(CPUMAXVS, PLANVS)).}
IF PLANSPD=OFF {SET CPUSPD TO MAX(CPUMINSPD, MIN(CPUMAXSPD, SPDMODE)).
} ELSE {SET CPUSPD TO MAX(CPUMINSPD, MIN(CPUMAXSPD, PLANSPD)).}
SET ERRVS TO MAX(-1, MIN(1, (CPUVS-VSMODE)/(ABS(VSMODE)+20))).
IF PLANPROPITCH=OFF {SET CPUPROPITCH TO MAX(-90, MIN(90, (ERRVS*ABS(ERRVS)*CPUMAXDEFL+PROPITCH))).
} ELSE {SET CPUPROPITCH TO PLANPROPITCH.}
IF PLANHEAD=OFF {SET CPUHEAD TO HEADING.} ELSE {SET CPUHEAD TO PLANHEAD.} SET CPUSTEER TO CPUHEAD.
SET ERRPROPITCH TO MAX(-1, MIN(1, (CPUPROPITCH-PROPITCH)/180)).
IF PLANPITCH=OFF {SET CPUPITCH TO MAX(CPUMINPITCH, MIN(CPUMAXPITCH, (ERRPROPITCH*SHIPMAXDEFL)+CPUPROPITCH)).
} ELSE {SET CPUPITCH TO PLANPITCH.}
IF PLANSPD=OFF {SET ERRSPD TO 0.} ELSE {SET ERRSPD TO MAX(-1, MIN(1, (CPUSPD-SPDMODE)/(ABS(CPUSPD)+10))).}
SET CPUTHROT TO MAX(SHIPMINTHROT,MIN(SHIPMAXTHROT,10*ERRSPD)).
SET NSV TO HEADING(CPUHEAD, CPUPITCH).
IF VANG(SV:VECTOR,NSV:VECTOR)>1 {SET SV TO NSV.}
SET SV TO HEADING(CPUHEAD, CPUPITCH). LIGHTS ON.}
